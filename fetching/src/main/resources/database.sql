create table if not exists finnhub_company
(
    id bigint generated by default as identity
        constraint finnhub_company_pkey
            primary key,
    country varchar(255),
    currency varchar(255),
    description varchar(255),
    display_symbol varchar(255),
    exchange varchar(255),
    finnhub_industry varchar(255),
    ipo varchar(255),
    logo varchar(255),
    name varchar(255),
    ticker varchar(255),
    web_url varchar(255)
);

alter table finnhub_company owner to postgres;

create table if not exists stock_data
(
    id bigint generated by default as identity (maxvalue 2147483647)
        constraint stock_data_pkey
            primary key,
    current_price double precision,
    open_price double precision,
    track_time timestamp,
    company_id bigint not null
        constraint stock_data_finnhub_company_id_fk
            references finnhub_company
);

alter table stock_data owner to postgres;

create table if not exists company_metrics
(
    id bigserial not null
        constraint company_metrics_pkey
            primary key,
    half_year_daily_return double precision,
    quarter_year_daily_return double precision,
    ten_day_average_trading_volume double precision,
    year_daily_return double precision,
    year_high double precision,
    year_high_date timestamp,
    year_low double precision,
    year_low_date timestamp,
    company_id bigint not null
        constraint company_metrics_finnhub_company_id_fk
            references finnhub_company
);

alter table company_metrics owner to postgres;

create table if not exists daily_stock_data
(
    id bigserial not null
        constraint daily_stock_data_pk
            primary key,
    high_price double precision,
    low_price double precision,
    company_id bigint not null
        constraint daily_stock_data_finnhub_company_id_fk
            references finnhub_company,
    track_time timestamp not null
);

alter table daily_stock_data owner to postgres;

create unique index if not exists daily_stock_data_id_uindex
    on daily_stock_data (id);
